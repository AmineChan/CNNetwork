/* AUTO-GENERATED FILE.  DO NOT MODIFY.
*
* 该文件自动生成，请不要修改！
*/

{{#operations}}
#import "{{classname}}.h"

{{#operation}}
@implementation {{classPrefix}}ApiObj{{vendorExtensions.x-objc-operationId}}

- (CNRequest *)apiRequest {
    {{#allParams}}
    {{#required}}
    NSParameterAssert(self.{{paramName}});
    {{/required}}
    {{/allParams}}

    NSMutableDictionary *pathParams = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *queryParams = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *headerParams = [[NSMutableDictionary alloc] init];
    NSMutableDictionary *formParams = [[NSMutableDictionary alloc] init];
    id bodyParam = nil;

    {{#pathParams}}
    if (self.{{paramName}} != nil) {
        pathParams[@"{{baseName}}"] = self.{{paramName}};
    }
    {{/pathParams}}
    {{#queryParams}}
    if (self.{{paramName}} != nil) {
        {{#collectionFormat}}
        queryParams[@"{{baseName}}"] = [[CNQueryParamCollection alloc] initWithValuesAndFormat:self.{{paramName}} format:@"{{collectionFormat}}"];
        {{/collectionFormat}}
        {{^collectionFormat}}queryParams[@"{{baseName}}"] = self.{{paramName}};{{/collectionFormat}}
    }
    {{/queryParams}}
    {{#headerParams}}
    if (self.{{paramName}} != nil) {
        headerParams[@"{{baseName}}"] = self.{{paramName}};
    }
    {{/headerParams}}
    // HTTP header `Accept`
    NSString *acceptHeader = [CNNetworkUtils selectHeaderAccept:@[{{#produces}}@"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}}]];
    if(acceptHeader.length > 0) {
        headerParams[@"Accept"] = acceptHeader;
    }

    {{#bodyParam}}
    bodyParam = self.{{paramName}};
    {{/bodyParam}}
    {{^bodyParam}}
    {{#formParams}}
    {{#notFile}}
    if (self.{{paramName}}) {
        formParams[@"{{baseName}}"] = self.{{paramName}};
    }
    {{/notFile}}
    {{/formParams}}
    {{/bodyParam}}

    // response content type
    NSString *responseContentType = [[acceptHeader componentsSeparatedByString:@", "] firstObject] ?: @"";
    // request content type
    NSString *requestContentType = [CNNetworkUtils selectHeaderContentType:@[{{#consumes}}@"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}}]];
    // Authentication setting
    {{#hasAuthMethods}}
    NSArray *authSettings = @[{{#authMethods}}@"{{name}}"{{#hasMore}}, {{/hasMore}}{{/authMethods}}];
    {{/hasAuthMethods}}

    return [[CNRequest alloc] initWithTag:API_TAG_{{vendorExtensions.x-objc-operationId}}
                               HTTPMethod:@"{{httpMethod}}"
                             relativePath:@"{{path}}"
                                serverKey:{{^vendorExtensions.x-server}}@"WEB"{{/vendorExtensions.x-server}}{{#vendorExtensions.x-server}}@"{{vendorExtensions.x-server}}"{{/vendorExtensions.x-server}}
                             headerParams:headerParams
                               pathParams:pathParams
                              queryParams:queryParams
                               formParams:formParams
                                bodyParam:bodyParam
                       requestContentType:requestContentType
                      responseContentType:responseContentType
                             responseType:{{^returnType}}nil{{/returnType}}{{#returnType}}@"{{{ returnType }}}"{{/returnType}}
                                authNames:{{#hasAuthMethods}}authSettings{{/hasAuthMethods}}{{^hasAuthMethods}}nil{{/hasAuthMethods}}];
}

@end

{{/operation}}
{{/operations}}
